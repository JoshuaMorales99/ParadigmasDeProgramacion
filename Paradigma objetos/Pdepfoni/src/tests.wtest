import LineasTelefonicas.*
import Consumos.*

// ----------------------------------------------------------------
// ðŸ”¸ Mi Universo.
// ----------------------------------------------------------------
// CONSUMOS.
const unConsumoTelefonico = new Llamada(cantSegundos = 10)
const otroConsumoTelefonico = new Llamada(cantSegundos = 40, fecha = new Date().minusYears(2))
const unConsumoInternet = new Internet(cantMB = 100)

// LINEAS TELEFONICAS.
const unaLineaTelefonica = new LineaTelefonica(telefono = 1234567890, consumos = [unConsumoTelefonico, otroConsumoTelefonico, unConsumoInternet])

// ----------------------------------------------------------------
// ðŸ”¸ Lineas Telefonicas.
// ----------------------------------------------------------------
describe "Lineas telefonicas" {
	test "Es posible obtener la cantidad de consumos realizados" {
		assert.equals(3, unaLineaTelefonica.cantConsumos())
	}
	
	test "Es posible obtener los consumos realizados entre dos fechas dadas" {
		assert.equals([unConsumoTelefonico, unConsumoInternet], unaLineaTelefonica.consumosEntre(new Date().minusDays(30) , new Date()))
	}
	
	test "Es posible obtener el costo total de los consumos realizados entre dos fechas dadas" {
		assert.equals(1 + 10, unaLineaTelefonica.costoTotalEntre(new Date().minusDays(30) , new Date()))
	}
	
	test "PUNTO 2.a: Es posible obtener el costo promedio de todos los consumos realizados entre dos fechas dadas" {
		assert.equals(11 / 3, unaLineaTelefonica.costoPromedioEntre(new Date().minusDays(30) , new Date()))
	}
	
	test "PUNTO 2.b: Es posible obtener el costo total de los consumos realizados en los ultimos 30 dias" {
		assert.equals(11, unaLineaTelefonica.ultimosCostosTotales())
	}
}

// ----------------------------------------------------------------
// ðŸ”¸ Consumos.
// ----------------------------------------------------------------
describe "Consumos de llamadas" {
	test "Es posible obtener los segundos restantes despues de los primeros 30 segundos de llamada" {
		assert.equals(0, unConsumoTelefonico.segundosRestantes())
		assert.equals(10, otroConsumoTelefonico.segundosRestantes())
	}
	
	test "Es posible obtener el costo de los segundos restantes" {
		assert.equals(0, unConsumoTelefonico.costoRestante())
		assert.equals(10 * 0.05, otroConsumoTelefonico.costoRestante())
	}
	
	test "PUNTO 1: Es posible obtener el costo del consumo de llamada (por 10 segundos)" {
		assert.equals(1 + 0 * 0.05, unConsumoTelefonico.costo())
	}
	
	test "PUNTO 1: Es posible obtener el costo del consumo de llamada (por 40 segundos)" {
		assert.equals(1 + 10 * 0.05, otroConsumoTelefonico.costo())
	}
	
	test "Es posible saber si la fecha de un consumo esta entre las fechas dadas" {
		assert.that(unConsumoTelefonico.entreFechas(new Date().minusDays(30) , new Date()))
		assert.notThat(otroConsumoTelefonico.entreFechas(new Date().minusDays(30) , new Date()))
	}
}

describe "Consumos de internet" {
	test "PUNTO 1: Es posible obtener el costo del consumo de internet (por 100 MB)" {
		assert.equals(100 * 0.10, unConsumoInternet.costo())
	}
}

// ----------------------------------------------------------------
// ðŸ”¸ Packs Telefonicos.
// ----------------------------------------------------------------
