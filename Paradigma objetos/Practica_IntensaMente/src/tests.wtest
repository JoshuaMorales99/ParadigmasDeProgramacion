import Personas.*
import Recuerdos.*
import Emociones.*
import ProcesosMentales.*

// -----------------------------------------------------------------------
// ðŸ”¸ Mi Universo.
// -----------------------------------------------------------------------
// Otras chicas.
const neutralGirl = new Chica(felicidad = 400, emocionDominante = disgusto, fechaDeNacimiento = new Date().minusDays(3885))
const sadGirl = new Chica(felicidad = 1, emocionDominante = tristeza, fechaDeNacimiento = new Date())

// Recuerdos.
const recuerdoAlegre = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = alegria, fecha = new Date().minusDays(3885))
const recuerdoTriste = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = tristeza)
const recuerdoDisgusto = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = disgusto)
const recuerdoFuria = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = furia)
const recuerdoTemor = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = temor)
const recuerdoDificil = new Recuerdo(descripcion = "Esto es la descripcion de un recuerdo super mega hiper dificil", emocion = alegria)

// -----------------------------------------------------------------------
// ðŸ”¸ Vivir.
// -----------------------------------------------------------------------
describe "Vivir" {
	test "PUNTO 1 - Es posible hacer que una chica viva un evento" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		assert.equals(2, riley.recuerdosDelDia().size())
	}
	
	test "PUNTO 2 - Es posible asentar un recuerdo de alegria en una chica" {
		// Si la felicidad de la chica es mayor a 500, entonces se asienta el recuerdo.
		riley.asentar(recuerdoAlegre)
		assert.equals(1, riley.pensamientosCentrales().size())
		
		// Si la felicidad de la chica es menor a 500, entonces no se asienta el recuerdo.
		neutralGirl.asentar(recuerdoAlegre)
		assert.equals(0, neutralGirl.pensamientosCentrales().size())
	}
	
	test "PUNTO 2 - Es posible lanzar una excepcion al tratar de asentar un recuerdo de tristeza en una chica con un nivel resultante de felicidad menor a 1" {
		assert.throwsExceptionWithMessage("La felicidad de la chica esta por debajo de 1", {sadGirl.asentar(recuerdoTriste)})
	}
	
	test "PUNTO 2 - Es posible asentar un recuerdo de tristeza en una chica" {
		// Si el nivel resultante de felicidad de la chica es mayor a 1, entonces se asienta el recuerdo.
		riley.asentar(recuerdoTriste)
		assert.equals(1, riley.pensamientosCentrales().size())
		assert.equals(900, riley.felicidad())
	}
	
	test "PUNTO 2 - Es Un recuerdo de disgusto en Riley no hace nada al asentarlo" {
		// Los recuerdos de disgusto, furioso o temeroso no producen efecto.
		riley.asentar(recuerdoDisgusto)
		riley.asentar(recuerdoFuria)
		riley.asentar(recuerdoTemor)
		assert.equals(0, riley.pensamientosCentrales().size())
		assert.equals(1000, riley.felicidad())
	}
	
	test "PUNTO 5 - Es posible obtener los pensamientos centrales dificiles de explicar" {
		riley.asentar(recuerdoAlegre)
		riley.asentar(recuerdoDificil)
		assert.equals(#{recuerdoDificil}, riley.pensamientosDificiles())
	}
}

// -----------------------------------------------------------------------
// ðŸ”¸ Descansar.
// -----------------------------------------------------------------------
describe "Descansar" {
	test "PUNTO 6 - Es posible negar recuerdos cuando la emocion dominante es alegria" {
		// Si la emocion dominante de la chica es alegria, entonces niega los recuerdos no alegres.
		assert.that(riley.niega(recuerdoTriste))
		assert.that(riley.niega(recuerdoDisgusto))
		assert.that(riley.niega(recuerdoFuria))
		assert.that(riley.niega(recuerdoTemor))
		
		// Si la emocion dominante de la chica es alegria, entonces no niega los recuerdos alegres.
		assert.notThat(riley.niega(recuerdoAlegre))
	}
	
	test "PUNTO 6 - Es posible negar recuerdos cuando la emocion dominante es tristeza" {
		// Si la emocion dominante de la chica es tristeza, entoces niega los recuerdos que son alegres.
		assert.that(sadGirl.niega(recuerdoAlegre))
		
		// Si la emocion dominante de la chica es tristeza, entonces no niega los recuerdos que no sean alegres.
		assert.notThat(sadGirl.niega(recuerdoTriste))
		assert.notThat(sadGirl.niega(recuerdoDisgusto))
		assert.notThat(sadGirl.niega(recuerdoFuria))
		assert.notThat(sadGirl.niega(recuerdoTemor))
	}
	
	test "PUNTO 6 - No es posible negar recuerdos cuando la emocion dominante es disgusto, furioso o temeroso" {
		// Los recuerdos dominantes de disgusto, furioso o temeroso no permiten negar recuerdos.
		assert.notThat(neutralGirl.niega(recuerdoAlegre))
		assert.notThat(sadGirl.niega(recuerdoTriste))
		assert.notThat(sadGirl.niega(recuerdoDisgusto))
		assert.notThat(sadGirl.niega(recuerdoFuria))
		assert.notThat(sadGirl.niega(recuerdoTemor))
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de asentamiento, lo cual asienta todos los recuerdos del dia" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.agregarProcesoMental(asentamiento)
		riley.dormir()
		assert.equals(2, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de asentamiento selectivo, lo cual asienta todos los recuerdos del dia que posean la palabra dada" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.agregarProcesoMental(new AsentamientoSelectivo(palabra = "otro"))
		riley.dormir()
		assert.equals(1, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de profundizacion, lo cual envia todos los recuerdos que no sean centrales y negados a la memoria de largo plazo" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.asentar(recuerdoAlegre)
		riley.asentar(recuerdoTriste)
		riley.agregarProcesoMental(profundizacion)
		riley.dormir()
		assert.equals(1, riley.memoriaLargoPlazo().size())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de control hormonal, lo cual genera un desequilibrio hormonal si detecta que un pensamiento central estÃ¡ tambien en la memoria a largo plazo" {
		riley.agregarPensamientoCentral(recuerdoAlegre)
		riley.agregarPensamientoCentral(recuerdoTriste)
		riley.agregarPensamientoCentral(recuerdoFuria)
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.agregarProcesoMental(controlHormonal)
		riley.dormir()
		assert.equals(850, riley.felicidad())
		assert.equals(0, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de control hormonal, lo cual genera un desequilibrio hormonal si detecta que los recuerdos del dÃ­a presentan la misma emociÃ³n dominante" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo mas")
		riley.agregarPensamientoCentral(recuerdoAlegre)
		riley.agregarPensamientoCentral(recuerdoTriste)
		riley.agregarPensamientoCentral(recuerdoFuria)
		riley.agregarProcesoMental(controlHormonal)
		riley.dormir()
		assert.equals(1000 - 1000 * 0.15, riley.felicidad())
		assert.equals(0, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de restauracion cognitiva, lo cual restaura hasta 100 puntos el nivel de felicidad" {
		// Suma 100 puntos de felicidad sin pasarse de los 1000.
		neutralGirl.agregarProcesoMental(restauracionCognitiva)
		neutralGirl.dormir()
		assert.equals(500, neutralGirl.felicidad())
		
		// No es posible pasarse de los 1000 puntos de felicidad.
		riley.agregarProcesoMental(restauracionCognitiva)
		riley.dormir()
		assert.equals(1000, riley.felicidad())
	}
	
	test "PUNTO 7 - Es posible dormir con el proceso de liberacion, lo cual libera todos los recuerdos del dia" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo mas")
		riley.agregarProcesoMental(liberacion)
		riley.dormir()
		assert.equals(0, riley.pensamientosCentrales().size())
	}
}

// -----------------------------------------------------------------------
// ðŸ”¸ Rememorar.
// -----------------------------------------------------------------------
describe "Rememorar" {
	test "PUNTO 8 - Es posible lanzar una excepcion al tratar de rememorar recuerdos no rememorables de la memoria de largo plazo"{
		riley.agregarLargoPlazo([recuerdoFuria])
		assert.throwsExceptionWithMessage("Sin recuerdos que rememorar", {riley.rememorar()})
	}
	
	test "PUNTO 8 - Es posible lanzar una excepcion al tratar de rememorar recuerdos no existentes de la memoria de largo plazo" {
		assert.throwsExceptionWithMessage("Sin recuerdos que rememorar", {riley.rememorar()})
	}
	
	test "PUNTO 8 - Es posible rememorar un recuerdo que se encuentra en la memoria de largo plazo" {
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.rememorar()
		assert.equals(recuerdoAlegre, riley.pensamientoActual())
	}
	
	test "PUNTO 9 - Es posible saber la cantidad de repeticiones de un recuerdo dado en la memoria a largo plazo" {
		riley.agregarLargoPlazo([recuerdoAlegre, recuerdoFuria, recuerdoAlegre])
		assert.equals(2, riley.repeticionesEnMemoriaLargoPlazoDe(recuerdoAlegre))
	}
	
	test "PUNTO 10 - Es posible saber si una chica tiene un Deja Vu" {
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.rememorar()
		assert.that(riley.dejaVu())
	}
}