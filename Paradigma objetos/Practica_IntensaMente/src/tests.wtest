import Personas.*
import Recuerdos.*
import Emociones.*
import ProcesosMentales.*

// -----------------------------------------------------------------------
// ðŸ”¸ Mi Universo.
// -----------------------------------------------------------------------
// Otras chicas.
const neutralGirl = new Chica(felicidad = 400, emocionDominante = disgusto, fechaDeNacimiento = new Date().minusDays(3885))
const sadGirl = new Chica(felicidad = 1, emocionDominante = tristeza, fechaDeNacimiento = new Date())

// Recuerdos.
const recuerdoAlegre = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = alegria, fecha = new Date().minusDays(3885))
const recuerdoTriste = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = tristeza)
const recuerdoDisgusto = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = disgusto)
const recuerdoFuria = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = furia)
const recuerdoTemor = new Recuerdo(descripcion = "Esto es la descripcion del recuerdo", emocion = temor)
const recuerdoDificil = new Recuerdo(descripcion = "Esto es la descripcion de un recuerdo super mega hiper dificil", emocion = alegria)

// -----------------------------------------------------------------------
// ðŸ”¸ Vivir.
// -----------------------------------------------------------------------
describe "Vivir" {
	test "PUNTO 1 - Hacer que Riley viva un evento" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		// Si Riley vive un evento, entonces ahora tiene dos en sus recuerdos del dia.
		assert.equals(2, riley.recuerdosDelDia().size())
	}
	
	test "PUNTO 2 - Un recuerdo de alegria en Riley (felicidad > 500) se asienta en un pensamiento central" {
		riley.asentar(recuerdoAlegre)
		assert.equals(1, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 2 - Un recuerdo de alegria en neutralGirl (felicidad <= 500) no se asienta en un pensamiento central" {
		neutralGirl.asentar(recuerdoAlegre)
		assert.equals(0, neutralGirl.pensamientosCentrales().size())
	}
	
	test "PUNTO 2 - Un recuerdo triste en Riley (nivel de felicidad resultante >= 1) se asienta en un pensamiento central" {
		riley.asentar(recuerdoTriste)
		assert.equals(1, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 2 - Un recuerdo triste en sadGirl (nivel de felicidad resultante < 1) lanza una excepcion al asentarlo" {
		assert.throwsExceptionWithMessage("La felicidad de la chica esta por debajo de 1", {sadGirl.asentar(recuerdoTriste)})
	}
	
	test "PUNTO 2 - Un recuerdo de disgusto en Riley no hace nada al asentarlo" {
		// No es necesario probar con los otros recuerdos de emociones, ya que son objetos de la misma clase.
		riley.asentar(recuerdoDisgusto)
		assert.equals(0, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 5 - Es posible obtener los pensamientos centrales dificiles de explicar" {
		riley.asentar(recuerdoAlegre)
		riley.asentar(recuerdoDificil)
		assert.equals(#{recuerdoDificil}, riley.pensamientosDificiles())
	}
}

// -----------------------------------------------------------------------
// ðŸ”¸ Descansar.
// -----------------------------------------------------------------------
describe "Descansar" {
	test "PUNTO 6 - Riley con emocion dominante alegria, niega los recuerdos que no son alegres" {
		assert.that(riley.niega(recuerdoTriste))
		assert.that(riley.niega(recuerdoDisgusto))
		assert.that(riley.niega(recuerdoFuria))
		assert.that(riley.niega(recuerdoTemor))
	}
	
	test "PUNTO 6 - Riley con emocion dominante alegria, no niega recuerdos que son alegres" {
		assert.notThat(riley.niega(recuerdoAlegre))
	}
	
	test "PUNTO 6 - sadGirl con emocion dominante tristeza, niega recuerdos que son alegres" {
		assert.that(sadGirl.niega(recuerdoAlegre))
	}
	
	test "PUNTO 6 - sadGirl con emocion dominante tristeza, no niega recuerdos que no son alegres" {
		assert.notThat(sadGirl.niega(recuerdoTriste))
		assert.notThat(sadGirl.niega(recuerdoDisgusto))
		assert.notThat(sadGirl.niega(recuerdoFuria))
		assert.notThat(sadGirl.niega(recuerdoTemor))
	}
	
	test "PUNTO 6 - neutralGirl con emocion dominante disgusto, no niega recuerdos" {
		// No es necesario probar con los otras emociones ya que son objetos de la misma clase.
		assert.notThat(neutralGirl.niega(recuerdoAlegre))
	}
	
	test "PUNTO 7 - El proceso 'Asentamiento' asienta todos los recuerdos del dia" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.agregarProcesoMental(asentamiento)
		riley.dormir()
		assert.equals(2, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - El proceso 'Asentamiento selectivo' con la palabra otro, asienta todos los recuerdos del dia que posean dicha palabra" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.agregarProcesoMental(new AsentamientoSelectivo(palabra = "otro"))
		riley.dormir()
		assert.equals(1, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - El proceso 'Profundizacion' envia todos los recuerdos que no sean centrales y que no sean negados a la memoria de largo plazo" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.asentar(recuerdoAlegre)
		riley.asentar(recuerdoTriste)
		riley.agregarProcesoMental(profundizacion)
		riley.dormir()
		assert.equals(1, riley.memoriaLargoPlazo().size())
	}
	
	test "PUNTO 7 - El proceso 'Control hormonal' si detecta que un pensamiento central estÃ¡ tambiÃ©n en la memoria a largo plazo, genera un desequilibrio hormonal" {
		riley.agregarPensamientoCentral(recuerdoAlegre)
		riley.agregarPensamientoCentral(recuerdoTriste)
		riley.agregarPensamientoCentral(recuerdoFuria)
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.agregarProcesoMental(controlHormonal)
		riley.dormir()
		assert.equals(850, riley.felicidad())
		assert.equals(0, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - El proceso 'Control hormonal' si detecta que los recuerdos del dÃ­a presentan la misma emociÃ³n dominante, genera un desequilibrio hormonal" {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo mas")
		riley.agregarPensamientoCentral(recuerdoAlegre)
		riley.agregarPensamientoCentral(recuerdoTriste)
		riley.agregarPensamientoCentral(recuerdoFuria)
		riley.agregarProcesoMental(controlHormonal)
		riley.dormir()
		assert.equals(850, riley.felicidad())
		assert.equals(0, riley.pensamientosCentrales().size())
	}
	
	test "PUNTO 7 - El proceso 'Restauracion cognitiva' restaura hasta 100 puntos el nivel de felicidad" {
		neutralGirl.agregarProcesoMental(restauracionCognitiva)
		neutralGirl.dormir()
		assert.equals(500, neutralGirl.felicidad())
	}
	
	test "PUNTO 7 - El proceso 'Restauracion cognitiva' no puede superar los 1000 puntos de nivel de felicidad" {
		riley.agregarProcesoMental(restauracionCognitiva)
		riley.dormir()
		assert.equals(1000, riley.felicidad())
	}
	
	test "PUNTO 7 - El proceso 'Liberacion' " {
		riley.vivirEvento("Esto es una descripcion de un recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo")
		riley.vivirEvento("Esto es una descripcion de otro recuerdo mas")
		riley.agregarProcesoMental(liberacion)
		riley.dormir()
		assert.equals(0, riley.pensamientosCentrales().size())
	}
}

// -----------------------------------------------------------------------
// ðŸ”¸ Rememorar.
// -----------------------------------------------------------------------
describe "Rememorar" {
	test "PUNTO 8 - Riley puede rememorar un recuerdo que se encuentra en la memoria de largo plazo" {
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.rememorar()
		assert.equals(recuerdoAlegre, riley.pensamientoActual())
	}
	
	test "PUNTO 8 - Cuando Riley tiene recuerdos en la memoria de largo plazo, pero no son rememorables, lanza una excepcion" {
		riley.agregarLargoPlazo([recuerdoFuria])
		assert.throwsExceptionWithMessage("Sin recuerdos que rememorar", {riley.rememorar()})
	}
	
	test "PUNTO 8 - Cuando Riley no tiene recuerdos en la memoria de largo plazo, lanza una excepcion al rememorar" {
		assert.throwsExceptionWithMessage("Sin recuerdos que rememorar", {riley.rememorar()})
	}
	
	test "PUNTO 9 - Es posible saber la cantidad de repeticiones de un recuerdo dado en la memoria a largo plazo" {
		riley.agregarLargoPlazo([recuerdoAlegre, recuerdoFuria, recuerdoAlegre])
		assert.equals(2, riley.repeticionesEnMemoriaLargoPlazoDe(recuerdoAlegre))
	}
	
	test "PUNTO 10 - Es posible saber si riley tiene un Deja Vu" {
		riley.agregarLargoPlazo([recuerdoAlegre])
		riley.rememorar()
		assert.that(riley.dejaVu())
	}
}