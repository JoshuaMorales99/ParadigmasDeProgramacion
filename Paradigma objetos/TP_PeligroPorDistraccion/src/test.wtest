import Personajes.*
import Lugares.*

/* =========================================================
 ðŸ”¸ PERSONAJES.
===========================================================*/
describe "Homero" {	
	test "PUNTO 1.b: Es posible comprar donas (Lo hace por docena)" {
		homero.comprarDonas()
		assert.equals(12, homero.cantDonas())
	}
	
	test "PUNTO 1.b: Si tiene donas, se come una" {
		homero.comprarDonas()
		homero.comerDonas()
		assert.equals(11, homero.cantDonas())
	}
	
	test "PUNTO 1.b: Si no tiene donas, no come" {
		homero.comerDonas()
		assert.equals(0, homero.cantDonas())
	}
	
	test "Es posible saber si tiene donas" {
		assert.notThat(homero.tieneDonas())
		homero.comprarDonas()
		assert.that(homero.tieneDonas())
	}
	
	test "PUNTO 2.b: Si tiene pocas donas (< 2), esta distrido" {
		assert.that(homero.estaDistraido())
	}
	
	test "PUNTO 2.b; Si tiene muchas donas (>= 2), no esta distraido" {
		homero.comprarDonas()
		assert.notThat(homero.estaDistraido())
	}
}

describe "Lenny" {
	test "Es posible hacer que tome cervezas" {
		lenny.tomarCerveza()
		assert.equals(1, lenny.cervezasTomadas())
	}
	
	test "PUNTO 5: Si tomo mas de 3, esta distrido" {
		lenny.tomarCerveza()
		lenny.tomarCerveza()
		lenny.tomarCerveza()
		lenny.tomarCerveza()
		assert.that(lenny.estaDistraido())
	}
	
	test "PUNTO 5: Si tomo menos de 3, no esta distrido" {
		assert.notThat(lenny.estaDistraido())
	}
}

describe "Mr. Burns" {
	test "PUNTO 6.a: Es posible saber si es pobre" {
		assert.notThat(mrBurns.esPobre())
	}
	
	test "PUNTO 6.b: Es posible despojarlo de sus riquezas" {
		mrBurns.despojarRiquezas()
		assert.that(mrBurns.esPobre())
	}
}

/*===========================================================
 ðŸ”¸ LUGARES.
===========================================================*/
describe "Planta Nuclear" {
	test "Es posible saber si hay muchas barras de uranio" {
		assert.notThat(plantaNuclear.hayMuchoUranio())
		plantaNuclear.recibirCargamento(15000)
		assert.that(plantaNuclear.hayMuchoUranio())
	}
	
	test "PUNTO 2.c: Esta en peligro si hay muchas barras de uranio y el encargado esta distraido" {
		// Recordar que Homero esta distraido pues tiene 0 donas al principio.
		plantaNuclear.recibirCargamento(15000)
		assert.that(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 2.c: No esta en peligro si el encargado no esta distraido, aunque haya muchas barras de uranio" {
		homero.comprarDonas()
		plantaNuclear.recibirCargamento(15000)
		assert.notThat(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 2.c: No esta en peligro si no hay muchas barras de uranio, aunque el encargado este distraido" {
		// Recordar que Homero esta distraido pues tiene 0 donas al principio.
		assert.notThat(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 6.d: Esta en peligro si hay muchas barras de uranio, el encargado esta distraido y Mr. Burns se quedo pobre" {
		// Recordar que Homero esta distraido pues tiene 0 donas al principio.
		plantaNuclear.recibirCargamento(15000)
		mrBurns.despojarRiquezas()
		assert.that(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 6.d: Esta directamente en peligro si Mr. Burns se quedo pobre" {
		mrBurns.despojarRiquezas()
		assert.that(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 6.d: No esta en peligro si no hay muchas muchas barras de uranio y Mr. Burns no esta pobre, aunque el encargado este distraido" {
		// Recordar que Homero esta distraido pues tiene 0 donas al principio.
		assert.notThat(plantaNuclear.estaEnPeligro())
	}
	
	test "PUNTO 6.d: No esta en peligro si el encargado no esta distraido y Mr. Burns no esta pobre, aunque haya muchas barras de uranio" {
		homero.comprarDonas()
		plantaNuclear.recibirCargamento(15000)
		assert.notThat(plantaNuclear.estaEnPeligro())
	}
}